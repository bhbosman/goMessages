// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: luno/stream.proto

package stream

import (
	context "context"
	constants "github.com/bhbosman/gocommon/constants"
	"github.com/bhbosman/gocommon/stream"
	goprotoextra "github.com/bhbosman/goprotoextra"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	proto1 "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeyId     string `protobuf:"bytes,1,opt,name=api_key_id,proto3" json:"api_key_id,omitempty"`
	ApiKeySecret string `protobuf:"bytes,2,opt,name=api_key_secret,proto3" json:"api_key_secret,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luno_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_luno_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_luno_stream_proto_rawDescGZIP(), []int{0}
}

func (x *Credentials) GetApiKeyId() string {
	if x != nil {
		return x.ApiKeyId
	}
	return ""
}

func (x *Credentials) GetApiKeySecret() string {
	if x != nil {
		return x.ApiKeySecret
	}
	return ""
}

func (self *Credentials) TypeCode() uint32 {
	return CredentialsTypeCode
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price  float64 `protobuf:"fixed64,2,opt,name=Price,json=price,proto3" json:"Price,omitempty"`
	Volume float64 `protobuf:"fixed64,3,opt,name=Volume,json=volume,proto3" json:"Volume,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luno_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_luno_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_luno_stream_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (self *Order) TypeCode() uint32 {
	return OrderTypeCode
}

type TradeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         float64 `protobuf:"fixed64,1,opt,name=base,proto3" json:"base,omitempty"`
	Counter      float64 `protobuf:"fixed64,2,opt,name=counter,proto3" json:"counter,omitempty"`
	MakerOrderId string  `protobuf:"bytes,3,opt,name=maker_order_id,proto3" json:"maker_order_id,omitempty"`
	TakerOrderId string  `protobuf:"bytes,4,opt,name=taker_order_id,proto3" json:"taker_order_id,omitempty"`
	Id           string  `protobuf:"bytes,5,opt,name=Id,json=order_id,proto3" json:"Id,omitempty"`
}

func (x *TradeUpdate) Reset() {
	*x = TradeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luno_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeUpdate) ProtoMessage() {}

func (x *TradeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_luno_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeUpdate.ProtoReflect.Descriptor instead.
func (*TradeUpdate) Descriptor() ([]byte, []int) {
	return file_luno_stream_proto_rawDescGZIP(), []int{2}
}

func (x *TradeUpdate) GetBase() float64 {
	if x != nil {
		return x.Base
	}
	return 0
}

func (x *TradeUpdate) GetCounter() float64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *TradeUpdate) GetMakerOrderId() string {
	if x != nil {
		return x.MakerOrderId
	}
	return ""
}

func (x *TradeUpdate) GetTakerOrderId() string {
	if x != nil {
		return x.TakerOrderId
	}
	return ""
}

func (x *TradeUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (self *TradeUpdate) TypeCode() uint32 {
	return TradeUpdateTypeCode
}

type DeleteUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,5,opt,name=order_id,proto3" json:"order_id,omitempty"`
}

func (x *DeleteUpdate) Reset() {
	*x = DeleteUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luno_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUpdate) ProtoMessage() {}

func (x *DeleteUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_luno_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUpdate.ProtoReflect.Descriptor instead.
func (*DeleteUpdate) Descriptor() ([]byte, []int) {
	return file_luno_stream_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteUpdate) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (self *DeleteUpdate) TypeCode() uint32 {
	return DeleteUpdateTypeCode
}

type CreateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=Id,json=order_id,proto3" json:"Id,omitempty"`
	Type   string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Price  float64 `protobuf:"fixed64,3,opt,name=Price,json=price,proto3" json:"Price,omitempty"`
	Volume float64 `protobuf:"fixed64,4,opt,name=Volume,json=volume,proto3" json:"Volume,omitempty"`
}

func (x *CreateUpdate) Reset() {
	*x = CreateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luno_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpdate) ProtoMessage() {}

func (x *CreateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_luno_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpdate.ProtoReflect.Descriptor instead.
func (*CreateUpdate) Descriptor() ([]byte, []int) {
	return file_luno_stream_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUpdate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateUpdate) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateUpdate) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (self *CreateUpdate) TypeCode() uint32 {
	return CreateUpdateTypeCode
}

type LunoStreamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentName string         `protobuf:"bytes,2,opt,name=instrument_name,proto3" json:"instrument_name,omitempty"`
	Sequence       int64          `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Asks           []*Order       `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	Bids           []*Order       `protobuf:"bytes,5,rep,name=bids,proto3" json:"bids,omitempty"`
	Status         string         `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp      int64          `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TradeUpdates   []*TradeUpdate `protobuf:"bytes,8,rep,name=trade_updates,proto3" json:"trade_updates,omitempty"`
	CreateUpdate   *CreateUpdate  `protobuf:"bytes,9,opt,name=create_update,proto3" json:"create_update,omitempty"`
	DeleteUpdate   *DeleteUpdate  `protobuf:"bytes,10,opt,name=delete_update,proto3" json:"delete_update,omitempty"`
	StatusUpdate   string         `protobuf:"bytes,11,opt,name=status_update,proto3" json:"status_update,omitempty"`
}

func (x *LunoStreamData) Reset() {
	*x = LunoStreamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luno_stream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LunoStreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LunoStreamData) ProtoMessage() {}

func (x *LunoStreamData) ProtoReflect() protoreflect.Message {
	mi := &file_luno_stream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LunoStreamData.ProtoReflect.Descriptor instead.
func (*LunoStreamData) Descriptor() ([]byte, []int) {
	return file_luno_stream_proto_rawDescGZIP(), []int{5}
}

func (x *LunoStreamData) GetInstrumentName() string {
	if x != nil {
		return x.InstrumentName
	}
	return ""
}

func (x *LunoStreamData) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *LunoStreamData) GetAsks() []*Order {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *LunoStreamData) GetBids() []*Order {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *LunoStreamData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LunoStreamData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LunoStreamData) GetTradeUpdates() []*TradeUpdate {
	if x != nil {
		return x.TradeUpdates
	}
	return nil
}

func (x *LunoStreamData) GetCreateUpdate() *CreateUpdate {
	if x != nil {
		return x.CreateUpdate
	}
	return nil
}

func (x *LunoStreamData) GetDeleteUpdate() *DeleteUpdate {
	if x != nil {
		return x.DeleteUpdate
	}
	return nil
}

func (x *LunoStreamData) GetStatusUpdate() string {
	if x != nil {
		return x.StatusUpdate
	}
	return ""
}

func (self *LunoStreamData) TypeCode() uint32 {
	return LunoStreamDataTypeCode
}

var File_luno_stream_proto protoreflect.FileDescriptor

var file_luno_stream_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x75, 0x6e, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x2a,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x22, 0xf6, 0x03, 0x0a, 0x0e, 0x4c, 0x75, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x30, 0x0a,
	0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x49, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_luno_stream_proto_rawDescOnce sync.Once
	file_luno_stream_proto_rawDescData = file_luno_stream_proto_rawDesc
)

func file_luno_stream_proto_rawDescGZIP() []byte {
	file_luno_stream_proto_rawDescOnce.Do(func() {
		file_luno_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_luno_stream_proto_rawDescData)
	})
	return file_luno_stream_proto_rawDescData
}

var file_luno_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_luno_stream_proto_goTypes = []interface{}{
	(*Credentials)(nil),    // 0: golang.example.policy.Credentials
	(*Order)(nil),          // 1: golang.example.policy.Order
	(*TradeUpdate)(nil),    // 2: golang.example.policy.TradeUpdate
	(*DeleteUpdate)(nil),   // 3: golang.example.policy.DeleteUpdate
	(*CreateUpdate)(nil),   // 4: golang.example.policy.CreateUpdate
	(*LunoStreamData)(nil), // 5: golang.example.policy.LunoStreamData
}
var file_luno_stream_proto_depIdxs = []int32{
	1, // 0: golang.example.policy.LunoStreamData.asks:type_name -> golang.example.policy.Order
	1, // 1: golang.example.policy.LunoStreamData.bids:type_name -> golang.example.policy.Order
	2, // 2: golang.example.policy.LunoStreamData.trade_updates:type_name -> golang.example.policy.TradeUpdate
	4, // 3: golang.example.policy.LunoStreamData.create_update:type_name -> golang.example.policy.CreateUpdate
	3, // 4: golang.example.policy.LunoStreamData.delete_update:type_name -> golang.example.policy.DeleteUpdate
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_luno_stream_proto_init() }
func file_luno_stream_proto_init() {
	if File_luno_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_luno_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_luno_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_luno_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_luno_stream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_luno_stream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_luno_stream_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LunoStreamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_luno_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_luno_stream_proto_goTypes,
		DependencyIndexes: file_luno_stream_proto_depIdxs,
		MessageInfos:      file_luno_stream_proto_msgTypes,
	}.Build()
	File_luno_stream_proto = out.File
	file_luno_stream_proto_rawDesc = nil
	file_luno_stream_proto_goTypes = nil
	file_luno_stream_proto_depIdxs = nil
}

const CredentialsTypeCode uint32 = 999346617
const OrderTypeCode uint32 = 3279290383
const TradeUpdateTypeCode uint32 = 207427806
const DeleteUpdateTypeCode uint32 = 689399013
const CreateUpdateTypeCode uint32 = 1135780059
const LunoStreamDataTypeCode uint32 = 2554079916

//true
//true
//false
//false
type CredentialsWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *Credentials
}

func (self *CredentialsWrapper) Message() proto1.Message {
	return self.Data
}

func (self *CredentialsWrapper) messageWrapper() goprotoextra.IMessageWrapper {
	return self
}

func NewCredentialsWrapper(
	cancelCtx context.Context,
	cancelFunc context.CancelFunc,
	toReactor goprotoextra.ToReactorFunc,
	toConnection goprotoextra.ToConnectionFunc,
	data *Credentials) *CredentialsWrapper {
	return &CredentialsWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(
			cancelCtx,
			cancelFunc,
			toReactor,
			toConnection),
		Data: data,
	}
}

var _ = stream.Register(
	CredentialsTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto1.Message {
			return &Credentials{}
		},
		CreateWrapper: func(
			cancelCtx context.Context,
			cancelFunc context.CancelFunc,
			toReactor goprotoextra.ToReactorFunc,
			toConnection goprotoextra.ToConnectionFunc,
			data proto1.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*Credentials); ok {
				return NewCredentialsWrapper(
					cancelCtx,
					cancelFunc,
					toReactor,
					toConnection,
					msg), nil
			}
			return nil, constants.InvalidParam
		}})

//true
//true
//false
//false
type OrderWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *Order
}

func (self *OrderWrapper) Message() proto1.Message {
	return self.Data
}

func (self *OrderWrapper) messageWrapper() goprotoextra.IMessageWrapper {
	return self
}

func NewOrderWrapper(
	cancelCtx context.Context,
	cancelFunc context.CancelFunc,
	toReactor goprotoextra.ToReactorFunc,
	toConnection goprotoextra.ToConnectionFunc,
	data *Order) *OrderWrapper {
	return &OrderWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(
			cancelCtx,
			cancelFunc,
			toReactor,
			toConnection),
		Data: data,
	}
}

var _ = stream.Register(
	OrderTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto1.Message {
			return &Order{}
		},
		CreateWrapper: func(
			cancelCtx context.Context,
			cancelFunc context.CancelFunc,
			toReactor goprotoextra.ToReactorFunc,
			toConnection goprotoextra.ToConnectionFunc,
			data proto1.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*Order); ok {
				return NewOrderWrapper(
					cancelCtx,
					cancelFunc,
					toReactor,
					toConnection,
					msg), nil
			}
			return nil, constants.InvalidParam
		}})

//true
//true
//false
//false
type TradeUpdateWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *TradeUpdate
}

func (self *TradeUpdateWrapper) Message() proto1.Message {
	return self.Data
}

func (self *TradeUpdateWrapper) messageWrapper() goprotoextra.IMessageWrapper {
	return self
}

func NewTradeUpdateWrapper(
	cancelCtx context.Context,
	cancelFunc context.CancelFunc,
	toReactor goprotoextra.ToReactorFunc,
	toConnection goprotoextra.ToConnectionFunc,
	data *TradeUpdate) *TradeUpdateWrapper {
	return &TradeUpdateWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(
			cancelCtx,
			cancelFunc,
			toReactor,
			toConnection),
		Data: data,
	}
}

var _ = stream.Register(
	TradeUpdateTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto1.Message {
			return &TradeUpdate{}
		},
		CreateWrapper: func(
			cancelCtx context.Context,
			cancelFunc context.CancelFunc,
			toReactor goprotoextra.ToReactorFunc,
			toConnection goprotoextra.ToConnectionFunc,
			data proto1.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*TradeUpdate); ok {
				return NewTradeUpdateWrapper(
					cancelCtx,
					cancelFunc,
					toReactor,
					toConnection,
					msg), nil
			}
			return nil, constants.InvalidParam
		}})

//true
//true
//false
//false
type DeleteUpdateWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *DeleteUpdate
}

func (self *DeleteUpdateWrapper) Message() proto1.Message {
	return self.Data
}

func (self *DeleteUpdateWrapper) messageWrapper() goprotoextra.IMessageWrapper {
	return self
}

func NewDeleteUpdateWrapper(
	cancelCtx context.Context,
	cancelFunc context.CancelFunc,
	toReactor goprotoextra.ToReactorFunc,
	toConnection goprotoextra.ToConnectionFunc,
	data *DeleteUpdate) *DeleteUpdateWrapper {
	return &DeleteUpdateWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(
			cancelCtx,
			cancelFunc,
			toReactor,
			toConnection),
		Data: data,
	}
}

var _ = stream.Register(
	DeleteUpdateTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto1.Message {
			return &DeleteUpdate{}
		},
		CreateWrapper: func(
			cancelCtx context.Context,
			cancelFunc context.CancelFunc,
			toReactor goprotoextra.ToReactorFunc,
			toConnection goprotoextra.ToConnectionFunc,
			data proto1.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*DeleteUpdate); ok {
				return NewDeleteUpdateWrapper(
					cancelCtx,
					cancelFunc,
					toReactor,
					toConnection,
					msg), nil
			}
			return nil, constants.InvalidParam
		}})

//true
//true
//false
//false
type CreateUpdateWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *CreateUpdate
}

func (self *CreateUpdateWrapper) Message() proto1.Message {
	return self.Data
}

func (self *CreateUpdateWrapper) messageWrapper() goprotoextra.IMessageWrapper {
	return self
}

func NewCreateUpdateWrapper(
	cancelCtx context.Context,
	cancelFunc context.CancelFunc,
	toReactor goprotoextra.ToReactorFunc,
	toConnection goprotoextra.ToConnectionFunc,
	data *CreateUpdate) *CreateUpdateWrapper {
	return &CreateUpdateWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(
			cancelCtx,
			cancelFunc,
			toReactor,
			toConnection),
		Data: data,
	}
}

var _ = stream.Register(
	CreateUpdateTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto1.Message {
			return &CreateUpdate{}
		},
		CreateWrapper: func(
			cancelCtx context.Context,
			cancelFunc context.CancelFunc,
			toReactor goprotoextra.ToReactorFunc,
			toConnection goprotoextra.ToConnectionFunc,
			data proto1.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*CreateUpdate); ok {
				return NewCreateUpdateWrapper(
					cancelCtx,
					cancelFunc,
					toReactor,
					toConnection,
					msg), nil
			}
			return nil, constants.InvalidParam
		}})

//true
//true
//false
//false
type LunoStreamDataWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *LunoStreamData
}

func (self *LunoStreamDataWrapper) Message() proto1.Message {
	return self.Data
}

func (self *LunoStreamDataWrapper) messageWrapper() goprotoextra.IMessageWrapper {
	return self
}

func NewLunoStreamDataWrapper(
	cancelCtx context.Context,
	cancelFunc context.CancelFunc,
	toReactor goprotoextra.ToReactorFunc,
	toConnection goprotoextra.ToConnectionFunc,
	data *LunoStreamData) *LunoStreamDataWrapper {
	return &LunoStreamDataWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(
			cancelCtx,
			cancelFunc,
			toReactor,
			toConnection),
		Data: data,
	}
}

var _ = stream.Register(
	LunoStreamDataTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto1.Message {
			return &LunoStreamData{}
		},
		CreateWrapper: func(
			cancelCtx context.Context,
			cancelFunc context.CancelFunc,
			toReactor goprotoextra.ToReactorFunc,
			toConnection goprotoextra.ToConnectionFunc,
			data proto1.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*LunoStreamData); ok {
				return NewLunoStreamDataWrapper(
					cancelCtx,
					cancelFunc,
					toReactor,
					toConnection,
					msg), nil
			}
			return nil, constants.InvalidParam
		}})
