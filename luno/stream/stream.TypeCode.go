// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0-devel
// 	protoc        v5.28.0
// source: luno/stream.proto

// TCVersion Generator: 1
package stream

import (
	stream "github.com/bhbosman/gocommon/stream"
	goerrors "github.com/bhbosman/goerrors"
	goprotoextra "github.com/bhbosman/goprotoextra"
	proto "google.golang.org/protobuf/proto"
)

// TypeCode generated from: "Credentials"
const CredentialsTypeCode uint32 = 2090444761

// TypeCode generated from: "Order"
const OrderTypeCode uint32 = 887667868

// TypeCode generated from: "TradeUpdate"
const TradeUpdateTypeCode uint32 = 3105915878

// TypeCode generated from: "DeleteUpdate"
const DeleteUpdateTypeCode uint32 = 1807957322

// TypeCode generated from: "CreateUpdate"
const CreateUpdateTypeCode uint32 = 963608395

// TypeCode generated from: "LunoStreamData"
const LunoStreamDataTypeCode uint32 = 1501281051

// true
// true
// false
// false
type CredentialsWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *Credentials
}

func (self *CredentialsWrapper) Message() interface{} {
	return self.Data
}

func (self *CredentialsWrapper) messageWrapper() interface{} {
	return self
}

func NewCredentialsWrapper(
	data *Credentials) *CredentialsWrapper {
	return &CredentialsWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	CredentialsTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &Credentials{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*Credentials); ok {
				return NewCredentialsWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type OrderWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *Order
}

func (self *OrderWrapper) Message() interface{} {
	return self.Data
}

func (self *OrderWrapper) messageWrapper() interface{} {
	return self
}

func NewOrderWrapper(
	data *Order) *OrderWrapper {
	return &OrderWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	OrderTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &Order{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*Order); ok {
				return NewOrderWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type TradeUpdateWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *TradeUpdate
}

func (self *TradeUpdateWrapper) Message() interface{} {
	return self.Data
}

func (self *TradeUpdateWrapper) messageWrapper() interface{} {
	return self
}

func NewTradeUpdateWrapper(
	data *TradeUpdate) *TradeUpdateWrapper {
	return &TradeUpdateWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	TradeUpdateTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &TradeUpdate{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*TradeUpdate); ok {
				return NewTradeUpdateWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type DeleteUpdateWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *DeleteUpdate
}

func (self *DeleteUpdateWrapper) Message() interface{} {
	return self.Data
}

func (self *DeleteUpdateWrapper) messageWrapper() interface{} {
	return self
}

func NewDeleteUpdateWrapper(
	data *DeleteUpdate) *DeleteUpdateWrapper {
	return &DeleteUpdateWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	DeleteUpdateTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &DeleteUpdate{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*DeleteUpdate); ok {
				return NewDeleteUpdateWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type CreateUpdateWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *CreateUpdate
}

func (self *CreateUpdateWrapper) Message() interface{} {
	return self.Data
}

func (self *CreateUpdateWrapper) messageWrapper() interface{} {
	return self
}

func NewCreateUpdateWrapper(
	data *CreateUpdate) *CreateUpdateWrapper {
	return &CreateUpdateWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	CreateUpdateTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &CreateUpdate{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*CreateUpdate); ok {
				return NewCreateUpdateWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type LunoStreamDataWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *LunoStreamData
}

func (self *LunoStreamDataWrapper) Message() interface{} {
	return self.Data
}

func (self *LunoStreamDataWrapper) messageWrapper() interface{} {
	return self
}

func NewLunoStreamDataWrapper(
	data *LunoStreamData) *LunoStreamDataWrapper {
	return &LunoStreamDataWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	LunoStreamDataTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &LunoStreamData{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*LunoStreamData); ok {
				return NewLunoStreamDataWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

func (self *Credentials) TypeCode() uint32 {
	return CredentialsTypeCode
}

func (self *Order) TypeCode() uint32 {
	return OrderTypeCode
}

func (self *TradeUpdate) TypeCode() uint32 {
	return TradeUpdateTypeCode
}

func (self *DeleteUpdate) TypeCode() uint32 {
	return DeleteUpdateTypeCode
}

func (self *CreateUpdate) TypeCode() uint32 {
	return CreateUpdateTypeCode
}

func (self *LunoStreamData) TypeCode() uint32 {
	return LunoStreamDataTypeCode
}
